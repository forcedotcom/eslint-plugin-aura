const auraApiRule = require('./rules/aura-api');

const rules = {
  'aura-api': {
    create: auraApiRule
  }
};

const ERROR = 2;
const WARNING = 1;
const IGNORE = 0;

module.exports = {
  rules,
  configs: {
    recommended: {
      plugins: [
        '@salesforce/eslint-plugin-aura'
      ],
      env: {
        browser: true,
        es6: false
      },
      parserOptions: {
        ecmaVersion: 5
      },
      globals: {
        $A: true,
        AuraContext: true,
        AuraSerializationService: true,
        AuraExpressionService: true,
        AuraEventService: true,
        AuraLocalizationService: true,
        AuraStorageService: true,
        AuraStyleService: true,
        MetricsService: true,
        AuraDevToolService: true,
        Component: true,
        CKEDITOR: true,
        FORCE: true,
        moment: true,
        exports: true,
        iScroll: true,
        unescape: true,
        Promise: true,
        Fixture: 'readonly',
        ScrumTeam: 'readonly',
        ImportJson: 'readonly',
        Test: 'readonly',
        Fact: 'readonly',
        Data: 'readonly',
        Async: 'readonly',
        Skip: 'readonly',
        Records: 'readonly',
        Stubs: 'readonly',
        Mocks: 'readonly',
        Assert: 'readonly'
      },
      rules: {
        // custom rules
        '@salesforce/aura/aura-api': ERROR,

        // platform rules that as immutable
        'no-alert': ERROR,
        'no-array-constructor': ERROR, // help with instanceof
        'no-bitwise': WARNING, // usually a typo | -> ||
        'no-caller': ERROR, // strict mode compliance
        'no-catch-shadow': ERROR,
        'no-cond-assign': ERROR,
        'no-console': ERROR,
        'no-constant-condition': ERROR,
        'no-control-regex': WARNING,
        'no-debugger': ERROR,
        'no-delete-var': WARNING, // for perf reasons, we might want to set this to 2
        'no-div-regex': WARNING,
        'no-dupe-keys': ERROR,
        'no-dupe-args': ERROR,
        'no-duplicate-case': ERROR,
        'no-else-return': IGNORE,
        'no-empty-character-class': ERROR,
        'no-eq-null': WARNING,
        'no-eval': ERROR,
        'no-ex-assign': ERROR,
        'no-extend-native': ERROR,
        'no-extra-bind': ERROR,
        'no-extra-boolean-cast': ERROR,
        'no-fallthrough': ERROR, // switch fallthrough
        'no-floating-decimal': WARNING, // var num = .5;
        'no-func-assign': ERROR,
        'no-implied-eval': ERROR,
        'no-inner-declarations': [ERROR, 'functions'],
        'no-invalid-regexp': ERROR,
        'no-irregular-whitespace': ERROR,
        'no-iterator': ERROR,
        'no-label-var': ERROR,
        'no-labels': ERROR,
        'no-loop-func': ERROR,
        'no-multi-str': ERROR,
        'no-native-reassign': ERROR,
        'no-negated-in-lhs': ERROR,
        'no-nested-ternary': WARNING,
        'no-new': ERROR,
        'no-new-func': ERROR,
        'no-new-object': ERROR,
        'no-new-wrappers': ERROR,
        'no-obj-calls': ERROR,
        'no-octal': ERROR,
        'no-octal-escape': ERROR,
        'no-param-reassign': WARNING,
        'no-plusplus': [
          'error',
          { allowForLoopAfterthoughts: true }
        ],
        'no-proto': ERROR,
        'no-redeclare': ERROR,
        'no-regex-spaces': ERROR,
        'no-return-assign': ERROR,
        'no-script-url': ERROR,
        'no-self-compare': ERROR,
        'no-sequences': ERROR, // var a = (3, 5);
        'no-shadow': ERROR,
        'no-shadow-restricted-names': ERROR,
        'no-sparse-arrays': ERROR,
        'no-ternary': IGNORE,
        'no-throw-literal': WARNING,
        'no-undef': WARNING,
        'no-undef-init': WARNING,
        'no-undefined': IGNORE,
        'no-underscore-dangle': IGNORE,
        'no-unreachable': ERROR,
        'no-unused-expressions': WARNING,
        'no-unused-vars': [WARNING, { vars: 'all', args: 'after-used' }],
        'no-use-before-define': [ERROR, { functions: false }],
        'no-void': ERROR,
        'no-var': IGNORE,
        'no-with': ERROR,
        'consistent-return': WARNING,
        'default-case': ERROR,
        'dot-notation': [WARNING, { allowKeywords: true }],
        eqeqeq: ['error', 'smart'],
        'guard-for-in': WARNING,
        'handle-callback-err': WARNING,
        'new-parens': ERROR,
        radix: ERROR,
        strict: IGNORE,
        'use-isnan': ERROR,
        'valid-typeof': ERROR,
        'wrap-iife': [WARNING, 'any'],
        'no-trailing-spaces': WARNING,
        'no-spaced-func': WARNING,
        'no-mixed-spaces-and-tabs': IGNORE,
        'no-multi-spaces': IGNORE,
        'no-multiple-empty-lines': IGNORE,
        'no-lone-blocks': WARNING,
        'no-lonely-if': WARNING,
        'no-inline-comments': IGNORE,
        'no-extra-parens': IGNORE,
        'no-extra-semi': WARNING,
        'no-warning-comments': [IGNORE, { terms: ['todo', 'fixme', 'xxx'], location: 'start' }],
        'block-scoped-var': WARNING,
        'brace-style': [WARNING, '1tbs'],
        camelcase: WARNING,
        'comma-dangle': [WARNING, 'never'],
        'comma-spacing': WARNING,
        'comma-style': WARNING,
        complexity: [IGNORE, 11],
        'consistent-this': [IGNORE, 'that'],
        curly: [WARNING, 'all'],
        'eol-last': IGNORE,
        'func-names': IGNORE,
        'func-style': [IGNORE, 'declaration'],
        'generator-star-spacing': IGNORE,
        indent: IGNORE,
        'key-spacing': IGNORE,
        'keyword-spacing': [0],
        'max-depth': [IGNORE, 4],
        'max-len': [IGNORE, 80, 4],
        'max-nested-callbacks': [IGNORE, 2],
        'max-params': [IGNORE, 3],
        'max-statements': [IGNORE, 10],
        'new-cap': IGNORE,
        'newline-after-var': IGNORE,
        'one-var': [IGNORE, 'never'],
        'operator-assignment': [IGNORE, 'always'],
        'padded-blocks': IGNORE,
        'quote-props': IGNORE,
        quotes: IGNORE,
        semi: WARNING,
        'semi-spacing': [IGNORE, { before: false, after: true }],
        'sort-vars': IGNORE,
        'space-after-function-name': [IGNORE, 'never'],
        'space-before-blocks': [IGNORE, 'always'],
        'space-before-function-paren': [IGNORE, 'always'],
        'space-before-function-parentheses': [IGNORE, 'always'],
        'space-in-brackets': [IGNORE, 'never'],
        'space-in-parens': [IGNORE, 'never'],
        'space-infix-ops': IGNORE,
        'space-unary-ops': [WARNING, { words: true, nonwords: false }],
        'spaced-comment': [IGNORE, 'always'],
        'vars-on-top': IGNORE,
        'valid-jsdoc': IGNORE,
        'wrap-regex': IGNORE,
        yoda: [WARNING, 'never']
      },
    }
  }
};
